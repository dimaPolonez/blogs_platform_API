AUTH-------------------------------------------------------------------------

/NOT_GUARD
POST auth/login
.send{
            loginOrEmail: 'Polonez',
            password: "pass1234"
        }

.expect(200)
.expect.headers['set-cookie']
['refreshToken: string';...]
.expect.body
{accessToken: string}

.expect(401)

.expect(400) 
*loginOrEmail - .isString().trim().notEmpty()
*password - .isString().trim().notEmpty().isLength({min: 6, max: 20})

.expect(429) More than 5 attempts from one IP-address during 10 seconds
/



/REFRESH_TOKEN
POST auth/refresh-token

.expect(200)
.expect.headers['set-cookie']
['refreshToken: string';...]
.expect.body
{accessToken: string}

.expect(401)

.expect(404)
/



/NOT_GUARD
POST auth/password-recovery
.send{
            email: 'string'
        }

.expect(204)

.expect(400) 
*email - .isString().trim().notEmpty().matches(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/)

.expect(429) More than 5 attempts from one IP-address during 10 seconds
/




/NOT_GUARD
POST auth/new-password
.send{
            newPassword: 'string',
	    recoveryCode: 'string'
        }

.expect(204)

.expect(400) 
*newPassword - .isString().trim().notEmpty().isLength({min: 6, max: 20})
*recoveryCode - .isString().trim().notEmpty().custom(CheckedService.activateCodeValid)

.expect(429) More than 5 attempts from one IP-address during 10 seconds
/


/NOT_GUARD
POST auth/registration-confirmation
.send{
            code: 'string'
        }

.expect(204)

.expect(400) 
*code - .isString().trim().notEmpty().custom(CheckedService.activateCodeValid)

.expect(429) More than 5 attempts from one IP-address during 10 seconds
/


/NOT_GUARD
POST auth/registration
.send{
            login: 'string',
	    password: 'string',
	    email: 'string'
        }

.expect(204)

.expect(400) 
*login - .isString().trim().notEmpty().isLength({min: 3, max: 10}).matches(/^[a-zA-Z0-9_-]*$/).custom(CheckedService.loginUniq)
*password - .isString().trim().notEmpty().isLength({min: 6, max: 20})
*email - .isString().trim().notEmpty().matches(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/).custom(CheckedService.emailUniq)

.expect(429) More than 5 attempts from one IP-address during 10 seconds
/


/NOT_GUARD
POST auth/registration-email-resending
.send{
	    email: 'string'
        }

.expect(204)

.expect(400) 
*email - .isString().trim().notEmpty().matches(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/).custom(CheckedService.emailToBase)

.expect(429) More than 5 attempts from one IP-address during 10 seconds
/


/REFRESH_TOKEN
POST auth/logout

.expect(204)

.expect(401)
/

/BEARER
GET auth/me

.expect(200)
.expect.body
{userId: ObjectId,
 email: string,
 login: string
 }
/

BLOGS-------------------------------------------------------------------------


/NOT_GUARD
POST /blog/:id

.expect(200)
.send{
	id:	ObjectId,
	name:	string,
	description: string,
	websiteUrl: string,
	createdAt: string
}

.expect(404)

/




































